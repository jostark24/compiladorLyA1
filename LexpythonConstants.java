/* Generated By:JavaCC: Do not edit this line. LexpythonConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface LexpythonConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int TRUE = 1;
  /** RegularExpression Id. */
  int FALSE = 2;
  /** RegularExpression Id. */
  int IF = 3;
  /** RegularExpression Id. */
  int ELSE = 4;
  /** RegularExpression Id. */
  int WHILE = 5;
  /** RegularExpression Id. */
  int FOR = 6;
  /** RegularExpression Id. */
  int RETURN = 7;
  /** RegularExpression Id. */
  int LEER = 8;
  /** RegularExpression Id. */
  int IMPRIMIR = 9;
  /** RegularExpression Id. */
  int LI = 10;
  /** RegularExpression Id. */
  int LD = 11;
  /** RegularExpression Id. */
  int PI = 12;
  /** RegularExpression Id. */
  int PD = 13;
  /** RegularExpression Id. */
  int PC = 14;
  /** RegularExpression Id. */
  int DP = 15;
  /** RegularExpression Id. */
  int C = 16;
  /** RegularExpression Id. */
  int A = 17;
  /** RegularExpression Id. */
  int SUMA = 18;
  /** RegularExpression Id. */
  int RESTA = 19;
  /** RegularExpression Id. */
  int MULTI = 20;
  /** RegularExpression Id. */
  int DIV = 21;
  /** RegularExpression Id. */
  int MOD = 22;
  /** RegularExpression Id. */
  int INCREMENTO = 23;
  /** RegularExpression Id. */
  int DECREMENTO = 24;
  /** RegularExpression Id. */
  int MAYOR = 25;
  /** RegularExpression Id. */
  int MENOR = 26;
  /** RegularExpression Id. */
  int IGUALDAD = 27;
  /** RegularExpression Id. */
  int IGUAL = 28;
  /** RegularExpression Id. */
  int AND = 29;
  /** RegularExpression Id. */
  int OR = 30;
  /** RegularExpression Id. */
  int NOT = 31;
  /** RegularExpression Id. */
  int letrasMin = 32;
  /** RegularExpression Id. */
  int letrasMay = 33;
  /** RegularExpression Id. */
  int numeros = 34;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 35;
  /** RegularExpression Id. */
  int NUMERO_ENTERO = 36;
  /** RegularExpression Id. */
  int NUMERO_REAL = 37;
  /** RegularExpression Id. */
  int CADENA = 38;
  /** RegularExpression Id. */
  int PARENL = 39;
  /** RegularExpression Id. */
  int ERROR = 44;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"true\"",
    "\"false\"",
    "\"if\"",
    "\"else:\"",
    "\"while\"",
    "\"for\"",
    "\"return\"",
    "\"input\"",
    "\"print\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\";\"",
    "\":\"",
    "\",\"",
    "\"&\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"++\"",
    "\"--\"",
    "\">\"",
    "\"<\"",
    "\"==\"",
    "\"=\"",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "<letrasMin>",
    "<letrasMay>",
    "<numeros>",
    "<IDENTIFICADOR>",
    "<NUMERO_ENTERO>",
    "<NUMERO_REAL>",
    "<CADENA>",
    "\"( )\"",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<ERROR>",
  };

}
